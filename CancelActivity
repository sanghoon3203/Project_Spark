package com.example.spark

import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.Project_Spark.ui.theme.ProjectSparkTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            ProjectSparkTheme {
                Surface(modifier = Modifier.fillMaxSize(), color = MaterialTheme.colorScheme.background) {
                    ExitScreen()
                }
            }
        }
    }
}

@Composable
fun ExitScreen() {
    var showDialog by remember { mutableStateOf(false) }
    var showToast by remember { mutableStateOf(false) }
    val context = LocalContext.current

    if (showDialog) {
        AlertDialog(
            onDismissRequest = { showDialog = false },
            title = { Text("탈퇴하기") },
            text = { Text("정말로 탈퇴하시겠습니까?") },
            confirmButton = {
                TextButton(
                    onClick = {
                        showDialog = false
                        showToast = true
                        // 탈퇴 기능을 여기에 추가헤주세요
                    }
                ) {
                    Text("예")
                }
            },
            dismissButton = {
                TextButton(onClick = { showDialog = false }) {
                    Text("아니오")
                }
            }
        )
    }

    if (showToast) {
        LaunchedEffect(Unit) {
            Toast.makeText(context, "탈퇴 처리되었습니다.", Toast.LENGTH_SHORT).show()
            showToast = false
        }
    }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        Text(
            text = "스파크를",
            fontSize = 30.sp,
            fontWeight = FontWeight.Bold,
            color = Color.Black
        )
        Text(
            text = "탈퇴",
            fontSize = 30.sp,
            fontWeight = FontWeight.Bold,
            color = Color.Red
        )
        Text(
            text = "하시겠습니까?",
            fontSize = 30.sp,
            fontWeight = FontWeight.Bold,
            color = Color.Black
        )
        Spacer(modifier = Modifier.height(16.dp))
        Text(
            text = "탈퇴하시면 이용 중인 서비스가 중지되며,",
            fontSize = 12.sp,
            color = Color.Black
        )
        Spacer(modifier = Modifier.height(16.dp))
        Text(
            text = "모든 데이터 복구가 불가능합니다.",
            fontSize = 12.sp,
            color = Color.Black
        )
        Spacer(modifier = Modifier.height(32.dp))
        Button(
            onClick = { showDialog = true },
            colors = ButtonDefaults.buttonColors(containerColor = Color.White),
            shape = RoundedCornerShape(8.dp),
            modifier = Modifier
                .background(Color.White)
                .padding(16.dp)
        ) {
            Text(text = "탈퇴하기", color = Color.Black)
        }
    }
}
